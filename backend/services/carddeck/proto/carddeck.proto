syntax = "proto3";

package carddeck;

option go_package = "./proto;carddeck";

service Carddeck {
	rpc CreateCard(CreateCardRequest) returns (IDResponse) {}
	rpc ModifyCard(ModifyCardRequest) returns (SuccessResponse) {}
	rpc DeleteCard(DeleteCardRequest) returns (SuccessResponse) {}
	rpc CreateDeck(CreateDeckRequest) returns (IDResponse) {}
	rpc ModifyDeck(ModifyDeckRequest) returns (SuccessResponse) {}
	rpc DeleteDeck(DeckRequest) returns (SuccessResponse) {}
	rpc GetDeckCards(DeckRequest) returns (DeckCardsResponse) {}
	rpc GetGroupDecks(GroupDecksRequest) returns (GroupDecksResponse) {}
}

message CreateCardRequest {
	string userID = 1;
	string deckID = 2;
	string frontside = 3;
	string backside = 4;
}

message ModifyCardRequest {
	string userID = 1;
	string cardID = 2;
	optional string frontside = 3;
	optional string backside = 4;
}

message DeleteCardRequest {
	string userID = 1;
	string cardID = 2;
}

message CreateDeckRequest {
	string userID = 1;
	string groupID = 2;
	string deckName = 3;
}

message ModifyDeckRequest {
	string userID = 1;
	string deckID = 2;
	optional string deckName = 3;
}

message IDResponse {
	string ID = 1;
}

message SuccessResponse {
	bool success = 1;
}

message DeckRequest {
	string userID = 1;
	string deckID = 2;
}

message DeckCardsResponse {
	repeated Card cards = 1;
}

message Card {
	string cardID = 1;
	string frontside = 2;
	string backside = 3;
}

message GroupDecksRequest {
	string userID = 1;
	string groupID = 2;
}

message GroupDecksResponse {
	repeated Deck decks = 1;
}

message Deck {
	string deckID = 1;
	string deckName = 2;
}